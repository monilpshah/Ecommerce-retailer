import { Rules, RuleFailure, ProgramAwareRuleWalker } from 'tslint';
import * as ts from 'typescript';
/**
 * Rule that walks through every identifier that is part of Angular Material and replaces the
 * outdated prefix with the new one.
 */
export declare class Rule extends Rules.TypedRule {
    applyWithProgram(sourceFile: ts.SourceFile, program: ts.Program): RuleFailure[];
}
export declare class SwitchIdentifiersWalker extends ProgramAwareRuleWalker {
    /** List of Angular Material declarations inside of the current source file. */
    materialDeclarations: ts.Declaration[];
    /** List of Angular Material namespace declarations in the current source file. */
    materialNamespaceDeclarations: ts.Declaration[];
    /** Method that is called for every identifier inside of the specified project. */
    visitIdentifier(identifier: ts.Identifier): void;
    /** Creates a failure and replacement for the specified identifier. */
    private createIdentifierFailure(identifier, symbol);
    /** Checks namespace imports from Angular Material and stores them in a list. */
    private _storeNamespaceImports(identifier);
    /** Checks whether the given identifier is part of the Material namespace. */
    private _isIdentifierFromNamespace(identifier);
    /** Returns the current source file path relative to the root directory of the project. */
    private _getRelativeFileName();
}
