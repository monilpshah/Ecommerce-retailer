/**
 * TSLint custom walker implementation that also visits external and inline templates.
 */
import { Fix, RuleWalker } from 'tslint';
import { ExternalResource } from "./component-file";
import * as ts from 'typescript';
/**
 * Custom TSLint rule walker that identifies Angular components and visits specific parts of
 * the component metadata.
 */
export declare class ComponentWalker extends RuleWalker {
    protected visitInlineTemplate(template: ts.StringLiteral): void;
    protected visitInlineStylesheet(stylesheet: ts.StringLiteral): void;
    protected visitExternalTemplate(template: ExternalResource): void;
    protected visitExternalStylesheet(stylesheet: ExternalResource): void;
    visitNode(node: ts.Node): void;
    private _visitDirectiveCallExpression(callExpression);
    private _reportInlineStyles(inlineStyles);
    private _visitExternalStylesArrayLiteral(styleUrls);
    private _reportExternalTemplate(templateUrlLiteral);
    _reportExternalStyle(stylePath: string): void;
    /** Creates a TSLint rule failure for the given external resource. */
    protected addExternalResourceFailure(file: ExternalResource, message: string, fix?: Fix): void;
}
